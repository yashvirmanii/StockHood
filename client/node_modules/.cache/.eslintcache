[{"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/src/Scrapers/indicesScraper.js":"1","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/App.js":"2","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Component/HeaderBar/HeaderBar.jsx":"3","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/DashBoard/DashBoard.jsx":"4","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Component/SelectInputSearch/SelectInput.jsx":"5","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/ChartPanel/ChartPanel.js":"6","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/NewsPanel/NewsPanel.jsx":"7","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/PredictionPanel/PredictionPanel.jsx":"8"},{"size":354,"mtime":1647074537291,"results":"9","hashOfConfig":"10"},{"size":1551,"mtime":1647425438514,"results":"11","hashOfConfig":"12"},{"size":1263,"mtime":1647093313926,"results":"13","hashOfConfig":"12"},{"size":8508,"mtime":1647425336974,"results":"14","hashOfConfig":"12"},{"size":577,"mtime":1647086912850,"results":"15","hashOfConfig":"12"},{"size":2682,"mtime":1647425375501,"results":"16","hashOfConfig":"12"},{"size":1202,"mtime":1647425301298,"results":"17","hashOfConfig":"12"},{"size":1043,"mtime":1647425267111,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"x8k4qn",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwzrfd",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/src/Scrapers/indicesScraper.js",["48"],[],"import axios from \"axios\";\nimport cheerio from \"cheerio\";\n\nconst IndicesScrape = (url) => {\n    axios({\n        method: 'get',\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\n        url: url\n    })\n        .then(res => {\n            const htmlResponse = res.data\n            console.log(htmlResponse)\n        })\n}\n\nexport default IndicesScrape;","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/App.js",[],[],"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Component/HeaderBar/HeaderBar.jsx",["49"],[],"import React from 'react'\nimport { useState } from \"react\";\nimport SelectInputSearch from '../SelectInputSearch/SelectInput'\nimport { Button } from 'rsuite';\nimport \"./styles.css\"\n\nconst HeaderBar = ({ setSelectedStock, selectedStock }) => {\n    const [search, setSearch] = useState(selectedStock)\n    return (\n        <header className='main-container'>\n            <div className=\"headerBar-left-side\">\n                <span className='headerBar-title'>StockHood</span>\n            </div>\n            <div className=\"headerBar-right-side\">\n                <SelectInputSearch\n                    size=\"lg\"\n                    placeholder=\"Search by Symbol or Company name...\"\n                    inputOptions={{\n                        onChange: (value) => {\n                            setSearch(value)\n                        }\n                    }}\n                    btnOptions={{\n                        onClick: () => {\n                            setSelectedStock(search)\n                        }\n                    }}\n                />\n            </div>\n            <div className=\"headerBar-rightEnd-side\">\n                <span className='headerBar-contact'>Contact Us</span>\n            </div>\n        </header>\n    )\n}\n\nexport default HeaderBar",["50","51"],"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/DashBoard/DashBoard.jsx",[],[],["52","53"],"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Component/SelectInputSearch/SelectInput.jsx",[],[],"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/ChartPanel/ChartPanel.js",["54"],[],"import React from \"react\";\nimport TradingViewWidget from 'react-tradingview-widget';\nimport { Panel, Row, Col, Button } from \"rsuite\";\nimport \"./styles.css\"\nconst ChartPanel = ({ selectedStock, portfolio }) => {\n    const symbol = `BSE:${selectedStock}`\n    return (\n        <div className=\"container\">\n            <div className=\"chart-container\">\n                <TradingViewWidget\n                    symbol={selectedStock === \"\" ? \"BSE:TCS\" : symbol}\n                    locale=\"in\"\n                    autosize\n                />\n            </div>\n            <div className=\"info-container\">\n                <Panel header=\"Big Sharks Portfolio\" shaded style={{ marginBottom: '10px' }}>\n                    <div className=\"btn-background\">\n                        <Button\n                            size=\"md\"\n                            color=\"blue\"\n                            appearance=\"primary\"\n                            className=\"zerodha-btn\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                window.open(`https://stocks.zerodha.com/stocks/${selectedStock}?checklist=basic`);\n                            }}\n                        >Trade via zerodha</Button>\n                    </div>\n                    <Row>\n                        {portfolio.length > 0 && portfolio.map((investor) => (\n                            <a style={{ textDecoration: 'none', color: 'black', cursor: 'pointer' }}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    window.open(investor.link);\n                                }}>\n                                <Col md={6} sm={12} key={investor.id} style={{ height: '10rem' }}>\n                                    <Panel bordered header={investor.investor} className='Indices-head'>\n                                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                            <span>\n                                                Total Holding:- {investor.holding}\n                                            </span>\n                                            <span>\n                                                Total NetWorth:- {investor.netWorth}\n                                            </span>\n                                        </div>\n                                    </Panel>\n                                </Col>\n                            </a>\n                        ))}\n                    </Row>\n                </Panel>\n            </div>\n        </div>\n    )\n}\n\nexport default ChartPanel","/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/NewsPanel/NewsPanel.jsx",[],[],"/Users/developer/Work/Yash/Personal/Projects/StockHood/stockhood/client/src/Controllers/PredictionPanel/PredictionPanel.jsx",[],[],{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":32,"column":29,"nodeType":"68","endLine":36,"endColumn":36},"no-unused-vars","'cheerio' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]