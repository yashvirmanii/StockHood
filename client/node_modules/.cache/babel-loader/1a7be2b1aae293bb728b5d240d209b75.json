{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserContext = exports.Browser = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst Target_js_1 = require(\"./Target.js\");\n\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\n\nconst Connection_js_1 = require(\"./Connection.js\");\n\nconst TaskQueue_js_1 = require(\"./TaskQueue.js\");\n\nconst WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([['geolocation', 'geolocation'], ['midi', 'midi'], ['notifications', 'notifications'], // TODO: push isn't a valid type?\n// ['push', 'push'],\n['camera', 'videoCapture'], ['microphone', 'audioCapture'], ['background-sync', 'backgroundSync'], ['ambient-light-sensor', 'sensors'], ['accelerometer', 'sensors'], ['gyroscope', 'sensors'], ['magnetometer', 'sensors'], ['accessibility-events', 'accessibilityEvents'], ['clipboard-read', 'clipboardReadWrite'], ['clipboard-write', 'clipboardReadWrite'], ['payment-handler', 'paymentHandler'], ['persistent-storage', 'durableStorage'], ['idle-detection', 'idleDetection'], // chrome-specific permissions we have.\n['midi-sysex', 'midiSysex']]);\n/**\n * A Browser is created when Puppeteer connects to a Chromium instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n *\n * An example of using a {@link Browser} to create a {@link Page}:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n *\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to Chromium\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from Chromium\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close Chromium\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\n\nclass Browser extends EventEmitter_js_1.EventEmitter {\n  /**\n   * @internal\n   */\n  constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback) {\n    super();\n    this._ignoredTargets = new Set();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._process = process;\n    this._screenshotTaskQueue = new TaskQueue_js_1.TaskQueue();\n    this._connection = connection;\n\n    this._closeCallback = closeCallback || function () {};\n\n    this._targetFilterCallback = targetFilterCallback || (() => true);\n\n    this._defaultContext = new BrowserContext(this._connection, this);\n    this._contexts = new Map();\n\n    for (const contextId of contextIds) this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n\n    this._targets = new Map();\n\n    this._connection.on(Connection_js_1.ConnectionEmittedEvents.Disconnected, () => this.emit(\"disconnected\"\n    /* Disconnected */\n    ));\n\n    this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n\n    this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n\n    this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n  }\n  /**\n   * @internal\n   */\n\n\n  static async create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback) {\n    const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback);\n    await connection.send('Target.setDiscoverTargets', {\n      discover: true\n    });\n    return browser;\n  }\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n\n\n  process() {\n    var _a;\n\n    return (_a = this._process) !== null && _a !== void 0 ? _a : null;\n  }\n  /**\n   * Creates a new incognito browser context. This won't share cookies/cache with other\n   * browser contexts.\n   *\n   * @example\n   * ```js\n   * (async () => {\n   *  const browser = await puppeteer.launch();\n   *   // Create a new incognito browser context.\n   *   const context = await browser.createIncognitoBrowserContext();\n   *   // Create a new page in a pristine context.\n   *   const page = await context.newPage();\n   *   // Do stuff\n   *   await page.goto('https://example.com');\n   * })();\n   * ```\n   */\n\n\n  async createIncognitoBrowserContext() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      proxyServer,\n      proxyBypassList\n    } = options;\n    const {\n      browserContextId\n    } = await this._connection.send('Target.createBrowserContext', {\n      proxyServer,\n      proxyBypassList: proxyBypassList && proxyBypassList.join(',')\n    });\n    const context = new BrowserContext(this._connection, this, browserContextId);\n\n    this._contexts.set(browserContextId, context);\n\n    return context;\n  }\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n\n\n  browserContexts() {\n    return [this._defaultContext, ...Array.from(this._contexts.values())];\n  }\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n\n\n  defaultBrowserContext() {\n    return this._defaultContext;\n  }\n  /**\n   * @internal\n   * Used by BrowserContext directly so cannot be marked private.\n   */\n\n\n  async _disposeContext(contextId) {\n    if (!contextId) {\n      return;\n    }\n\n    await this._connection.send('Target.disposeBrowserContext', {\n      browserContextId: contextId\n    });\n\n    this._contexts.delete(contextId);\n  }\n\n  async _targetCreated(event) {\n    var _a;\n\n    const targetInfo = event.targetInfo;\n    const {\n      browserContextId\n    } = targetInfo;\n    const context = browserContextId && this._contexts.has(browserContextId) ? this._contexts.get(browserContextId) : this._defaultContext;\n\n    if (!context) {\n      throw new Error('Missing browser context');\n    }\n\n    const shouldAttachToTarget = this._targetFilterCallback(targetInfo);\n\n    if (!shouldAttachToTarget) {\n      this._ignoredTargets.add(targetInfo.targetId);\n\n      return;\n    }\n\n    const target = new Target_js_1.Target(targetInfo, context, () => this._connection.createSession(targetInfo), this._ignoreHTTPSErrors, (_a = this._defaultViewport) !== null && _a !== void 0 ? _a : null, this._screenshotTaskQueue);\n    (0, assert_js_1.assert)(!this._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n\n    this._targets.set(event.targetInfo.targetId, target);\n\n    if (await target._initializedPromise) {\n      this.emit(\"targetcreated\"\n      /* TargetCreated */\n      , target);\n      context.emit(\"targetcreated\"\n      /* TargetCreated */\n      , target);\n    }\n  }\n\n  async _targetDestroyed(event) {\n    if (this._ignoredTargets.has(event.targetId)) return;\n\n    const target = this._targets.get(event.targetId);\n\n    if (!target) {\n      throw new Error(`Missing target in _targetDestroyed (id = ${event.targetId})`);\n    }\n\n    target._initializedCallback(false);\n\n    this._targets.delete(event.targetId);\n\n    target._closedCallback();\n\n    if (await target._initializedPromise) {\n      this.emit(\"targetdestroyed\"\n      /* TargetDestroyed */\n      , target);\n      target.browserContext().emit(\"targetdestroyed\"\n      /* TargetDestroyed */\n      , target);\n    }\n  }\n\n  _targetInfoChanged(event) {\n    if (this._ignoredTargets.has(event.targetInfo.targetId)) return;\n\n    const target = this._targets.get(event.targetInfo.targetId);\n\n    if (!target) {\n      throw new Error(`Missing target in targetInfoChanged (id = ${event.targetInfo.targetId})`);\n    }\n\n    const previousURL = target.url();\n    const wasInitialized = target._isInitialized;\n\n    target._targetInfoChanged(event.targetInfo);\n\n    if (wasInitialized && previousURL !== target.url()) {\n      this.emit(\"targetchanged\"\n      /* TargetChanged */\n      , target);\n      target.browserContext().emit(\"targetchanged\"\n      /* TargetChanged */\n      , target);\n    }\n  }\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n\n\n  wsEndpoint() {\n    return this._connection.url();\n  }\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n\n\n  async newPage() {\n    return this._defaultContext.newPage();\n  }\n  /**\n   * @internal\n   * Used by BrowserContext directly so cannot be marked private.\n   */\n\n\n  async _createPageInContext(contextId) {\n    const {\n      targetId\n    } = await this._connection.send('Target.createTarget', {\n      url: 'about:blank',\n      browserContextId: contextId || undefined\n    });\n\n    const target = this._targets.get(targetId);\n\n    if (!target) {\n      throw new Error(`Missing target for page (id = ${targetId})`);\n    }\n\n    const initialized = await target._initializedPromise;\n\n    if (!initialized) {\n      throw new Error(`Failed to create target for page (id = ${targetId})`);\n    }\n\n    const page = await target.page();\n\n    if (!page) {\n      throw new Error(`Failed to create a page for context (id = ${contextId})`);\n    }\n\n    return page;\n  }\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n\n\n  targets() {\n    return Array.from(this._targets.values()).filter(target => target._isInitialized);\n  }\n  /**\n   * The target associated with the browser.\n   */\n\n\n  target() {\n    const browserTarget = this.targets().find(target => target.type() === 'browser');\n\n    if (!browserTarget) {\n      throw new Error('Browser target is not found');\n    }\n\n    return browserTarget;\n  }\n  /**\n   * Searches for a target in all browser contexts.\n   *\n   * @param predicate - A function to be run for every target.\n   * @returns The first target found that matches the `predicate` function.\n   *\n   * @example\n   *\n   * An example of finding a target for a page opened via `window.open`:\n   * ```js\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browser.waitForTarget(target => target.url() === 'https://www.example.com/');\n   * ```\n   */\n\n\n  async waitForTarget(predicate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      timeout = 30000\n    } = options;\n    let resolve;\n    const targetPromise = new Promise(x => resolve = x);\n    this.on(\"targetcreated\"\n    /* TargetCreated */\n    , check);\n    this.on(\"targetchanged\"\n    /* TargetChanged */\n    , check);\n\n    try {\n      if (!timeout) return await targetPromise;\n      return await helper_js_1.helper.waitWithTimeout(Promise.race([targetPromise, (async () => {\n        for (const target of this.targets()) {\n          if (await predicate(target)) {\n            return target;\n          }\n        }\n\n        await targetPromise;\n      })()]), 'target', timeout);\n    } finally {\n      this.removeListener(\"targetcreated\"\n      /* TargetCreated */\n      , check);\n      this.removeListener(\"targetchanged\"\n      /* TargetChanged */\n      , check);\n    }\n\n    async function check(target) {\n      if (await predicate(target)) resolve(target);\n    }\n  }\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n\n\n  async pages() {\n    const contextPages = await Promise.all(this.browserContexts().map(context => context.pages())); // Flatten array.\n\n    return contextPages.reduce((acc, x) => acc.concat(x), []);\n  }\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless, this is similar to `Chrome/61.0.3153.0`.\n   *\n   * The format of browser.version() might change with future releases of Chromium.\n   */\n\n\n  async version() {\n    const version = await this._getVersion();\n    return version.product;\n  }\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n\n\n  async userAgent() {\n    const version = await this._getVersion();\n    return version.userAgent;\n  }\n  /**\n   * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object\n   * itself is considered to be disposed and cannot be used anymore.\n   */\n\n\n  async close() {\n    await this._closeCallback.call(null);\n    this.disconnect();\n  }\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the Chromium process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n\n\n  disconnect() {\n    this._connection.dispose();\n  }\n  /**\n   * Indicates that the browser is connected.\n   */\n\n\n  isConnected() {\n    return !this._connection._closed;\n  }\n\n  _getVersion() {\n    return this._connection.send('Browser.getVersion');\n  }\n\n}\n\nexports.Browser = Browser;\n/**\n * BrowserContexts provide a way to operate multiple independent browser\n * sessions. When a browser is launched, it has a single BrowserContext used by\n * default. The method {@link Browser.newPage | Browser.newPage} creates a page\n * in the default browser context.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and\n * will emit various events which are documented in the\n * {@link BrowserContextEmittedEvents} enum.\n *\n * If a page opens another page, e.g. with a `window.open` call, the popup will\n * belong to the parent page's browser context.\n *\n * Puppeteer allows creation of \"incognito\" browser contexts with\n * {@link Browser.createIncognitoBrowserContext | Browser.createIncognitoBrowserContext}\n * method. \"Incognito\" browser contexts don't write any browsing data to disk.\n *\n * @example\n * ```js\n * // Create a new incognito browser context\n * const context = await browser.createIncognitoBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n * @public\n */\n\nclass BrowserContext extends EventEmitter_js_1.EventEmitter {\n  /**\n   * @internal\n   */\n  constructor(connection, browser, contextId) {\n    super();\n    this._connection = connection;\n    this._browser = browser;\n    this._id = contextId;\n  }\n  /**\n   * An array of all active targets inside the browser context.\n   */\n\n\n  targets() {\n    return this._browser.targets().filter(target => target.browserContext() === this);\n  }\n  /**\n   * This searches for a target in this specific browser context.\n   *\n   * @example\n   * An example of finding a target for a page opened via `window.open`:\n   * ```js\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browserContext.waitForTarget(target => target.url() === 'https://www.example.com/');\n   * ```\n   *\n   * @param predicate - A function to be run for every target\n   * @param options - An object of options. Accepts a timout,\n   * which is the maximum wait time in milliseconds.\n   * Pass `0` to disable the timeout. Defaults to 30 seconds.\n   * @returns Promise which resolves to the first target found\n   * that matches the `predicate` function.\n   */\n\n\n  waitForTarget(predicate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._browser.waitForTarget(target => target.browserContext() === this && predicate(target), options);\n  }\n  /**\n   * An array of all pages inside the browser context.\n   *\n   * @returns Promise which resolves to an array of all open pages.\n   * Non visible pages, such as `\"background_page\"`, will not be listed here.\n   * You can find them using {@link Target.page | the target page}.\n   */\n\n\n  async pages() {\n    const pages = await Promise.all(this.targets().filter(target => target.type() === 'page').map(target => target.page()));\n    return pages.filter(page => !!page);\n  }\n  /**\n   * Returns whether BrowserContext is incognito.\n   * The default browser context is the only non-incognito browser context.\n   *\n   * @remarks\n   * The default browser context cannot be closed.\n   */\n\n\n  isIncognito() {\n    return !!this._id;\n  }\n  /**\n   * @example\n   * ```js\n   * const context = browser.defaultBrowserContext();\n   * await context.overridePermissions('https://html5demos.com', ['geolocation']);\n   * ```\n   *\n   * @param origin - The origin to grant permissions to, e.g. \"https://example.com\".\n   * @param permissions - An array of permissions to grant.\n   * All permissions that are not listed here will be automatically denied.\n   */\n\n\n  async overridePermissions(origin, permissions) {\n    const protocolPermissions = permissions.map(permission => {\n      const protocolPermission = WEB_PERMISSION_TO_PROTOCOL_PERMISSION.get(permission);\n      if (!protocolPermission) throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._connection.send('Browser.grantPermissions', {\n      origin,\n      browserContextId: this._id || undefined,\n      permissions: protocolPermissions\n    });\n  }\n  /**\n   * Clears all permission overrides for the browser context.\n   *\n   * @example\n   * ```js\n   * const context = browser.defaultBrowserContext();\n   * context.overridePermissions('https://example.com', ['clipboard-read']);\n   * // do stuff ..\n   * context.clearPermissionOverrides();\n   * ```\n   */\n\n\n  async clearPermissionOverrides() {\n    await this._connection.send('Browser.resetPermissions', {\n      browserContextId: this._id || undefined\n    });\n  }\n  /**\n   * Creates a new page in the browser context.\n   */\n\n\n  newPage() {\n    return this._browser._createPageInContext(this._id);\n  }\n  /**\n   * The browser this browser context belongs to.\n   */\n\n\n  browser() {\n    return this._browser;\n  }\n  /**\n   * Closes the browser context. All the targets that belong to the browser context\n   * will be closed.\n   *\n   * @remarks\n   * Only incognito browser contexts can be closed.\n   */\n\n\n  async close() {\n    (0, assert_js_1.assert)(this._id, 'Non-incognito profiles cannot be closed!');\n    await this._browser._disposeContext(this._id);\n  }\n\n}\n\nexports.BrowserContext = BrowserContext;","map":{"version":3,"mappings":"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","names":["WEB_PERMISSION_TO_PROTOCOL_PERMISSION","Map","Browser","EventEmitter_js_1","constructor","connection","contextIds","ignoreHTTPSErrors","defaultViewport","process","closeCallback","targetFilterCallback","Set","_ignoreHTTPSErrors","_defaultViewport","_process","_screenshotTaskQueue","TaskQueue_js_1","_connection","_closeCallback","_targetFilterCallback","_defaultContext","BrowserContext","_contexts","contextId","set","_targets","on","Connection_js_1","Disconnected","emit","_targetCreated","bind","_targetDestroyed","_targetInfoChanged","create","browser","send","discover","_a","createIncognitoBrowserContext","options","proxyServer","proxyBypassList","browserContextId","join","context","browserContexts","Array","from","values","defaultBrowserContext","_disposeContext","delete","event","targetInfo","has","get","Error","shouldAttachToTarget","_ignoredTargets","add","targetId","target","Target_js_1","createSession","_initializedPromise","_initializedCallback","_closedCallback","browserContext","previousURL","url","wasInitialized","_isInitialized","wsEndpoint","newPage","_createPageInContext","undefined","initialized","page","targets","filter","browserTarget","find","type","waitForTarget","predicate","timeout","resolve","targetPromise","Promise","x","check","helper_js_1","waitWithTimeout","race","removeListener","pages","contextPages","all","map","reduce","acc","concat","version","_getVersion","product","userAgent","close","call","disconnect","dispose","isConnected","_closed","exports","_browser","_id","isIncognito","overridePermissions","origin","permissions","protocolPermissions","permission","protocolPermission","clearPermissionOverrides"],"sources":["../../../../src/common/Browser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}