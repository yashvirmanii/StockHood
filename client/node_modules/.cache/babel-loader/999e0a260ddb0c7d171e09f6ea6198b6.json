{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Frame = exports.FrameManager = exports.FrameManagerEmittedEvents = void 0;\n\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst ExecutionContext_js_1 = require(\"./ExecutionContext.js\");\n\nconst LifecycleWatcher_js_1 = require(\"./LifecycleWatcher.js\");\n\nconst DOMWorld_js_1 = require(\"./DOMWorld.js\");\n\nconst NetworkManager_js_1 = require(\"./NetworkManager.js\");\n\nconst Connection_js_1 = require(\"./Connection.js\");\n\nconst UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\nconst xPathPattern = /^\\(\\/\\/[^\\)]+\\)|^\\/\\//;\n/**\n * We use symbols to prevent external parties listening to these events.\n * They are internal to Puppeteer.\n *\n * @internal\n */\n\nexports.FrameManagerEmittedEvents = {\n  FrameAttached: Symbol('FrameManager.FrameAttached'),\n  FrameNavigated: Symbol('FrameManager.FrameNavigated'),\n  FrameDetached: Symbol('FrameManager.FrameDetached'),\n  FrameSwapped: Symbol('FrameManager.FrameSwapped'),\n  LifecycleEvent: Symbol('FrameManager.LifecycleEvent'),\n  FrameNavigatedWithinDocument: Symbol('FrameManager.FrameNavigatedWithinDocument'),\n  ExecutionContextCreated: Symbol('FrameManager.ExecutionContextCreated'),\n  ExecutionContextDestroyed: Symbol('FrameManager.ExecutionContextDestroyed')\n};\n/**\n * @internal\n */\n\nclass FrameManager extends EventEmitter_js_1.EventEmitter {\n  constructor(client, page, ignoreHTTPSErrors, timeoutSettings) {\n    super();\n    this._frames = new Map();\n    this._contextIdToContext = new Map();\n    this._isolatedWorlds = new Set();\n    this._client = client;\n    this._page = page;\n    this._networkManager = new NetworkManager_js_1.NetworkManager(client, ignoreHTTPSErrors, this);\n    this._timeoutSettings = timeoutSettings;\n    this.setupEventListeners(this._client);\n  }\n\n  setupEventListeners(session) {\n    session.on('Page.frameAttached', event => {\n      this._onFrameAttached(session, event.frameId, event.parentFrameId);\n    });\n    session.on('Page.frameNavigated', event => {\n      this._onFrameNavigated(event.frame);\n    });\n    session.on('Page.navigatedWithinDocument', event => {\n      this._onFrameNavigatedWithinDocument(event.frameId, event.url);\n    });\n    session.on('Page.frameDetached', event => {\n      this._onFrameDetached(event.frameId, event.reason);\n    });\n    session.on('Page.frameStoppedLoading', event => {\n      this._onFrameStoppedLoading(event.frameId);\n    });\n    session.on('Runtime.executionContextCreated', event => {\n      this._onExecutionContextCreated(event.context, session);\n    });\n    session.on('Runtime.executionContextDestroyed', event => {\n      this._onExecutionContextDestroyed(event.executionContextId, session);\n    });\n    session.on('Runtime.executionContextsCleared', () => {\n      this._onExecutionContextsCleared(session);\n    });\n    session.on('Page.lifecycleEvent', event => {\n      this._onLifecycleEvent(event);\n    });\n    session.on('Target.attachedToTarget', async event => {\n      this._onAttachedToTarget(event);\n    });\n    session.on('Target.detachedFromTarget', async event => {\n      this._onDetachedFromTarget(event);\n    });\n  }\n\n  async initialize() {\n    let client = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._client;\n\n    try {\n      const result = await Promise.all([client.send('Page.enable'), client.send('Page.getFrameTree')]);\n      const {\n        frameTree\n      } = result[1];\n\n      this._handleFrameTree(client, frameTree);\n\n      await Promise.all([client.send('Page.setLifecycleEventsEnabled', {\n        enabled: true\n      }), client.send('Runtime.enable').then(() => this._ensureIsolatedWorld(client, UTILITY_WORLD_NAME)), // TODO: Network manager is not aware of OOP iframes yet.\n      client === this._client ? this._networkManager.initialize() : Promise.resolve()]);\n    } catch (error) {\n      // The target might have been closed before the initialization finished.\n      if (error.message.includes('Target closed') || error.message.includes('Session closed')) {\n        return;\n      }\n\n      throw error;\n    }\n  }\n\n  networkManager() {\n    return this._networkManager;\n  }\n\n  async navigateFrame(frame, url) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher_js_1.LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = await Promise.race([navigate(this._client, url, referer, frame._id), watcher.timeoutOrTerminationPromise()]);\n\n    if (!error) {\n      error = await Promise.race([watcher.timeoutOrTerminationPromise(), ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise()]);\n    }\n\n    watcher.dispose();\n    if (error) throw error;\n    return await watcher.navigationResponse();\n\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    }\n  }\n\n  async waitForFrameNavigation(frame) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher_js_1.LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = await Promise.race([watcher.timeoutOrTerminationPromise(), watcher.sameDocumentNavigationPromise(), watcher.newDocumentNavigationPromise()]);\n    watcher.dispose();\n    if (error) throw error;\n    return await watcher.navigationResponse();\n  }\n\n  async _onAttachedToTarget(event) {\n    if (event.targetInfo.type !== 'iframe') {\n      return;\n    }\n\n    const frame = this._frames.get(event.targetInfo.targetId);\n\n    const session = Connection_js_1.Connection.fromSession(this._client).session(event.sessionId);\n    if (frame) frame._updateClient(session);\n    this.setupEventListeners(session);\n    await this.initialize(session);\n  }\n\n  async _onDetachedFromTarget(event) {\n    const frame = this._frames.get(event.targetId);\n\n    if (frame && frame.isOOPFrame()) {\n      // When an OOP iframe is removed from the page, it\n      // will only get a Target.detachedFromTarget event.\n      this._removeFramesRecursively(frame);\n    }\n  }\n\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n\n    if (!frame) return;\n\n    frame._onLifecycleEvent(event.loaderId, event.name);\n\n    this.emit(exports.FrameManagerEmittedEvents.LifecycleEvent, frame);\n  }\n\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n\n    if (!frame) return;\n\n    frame._onLoadingStopped();\n\n    this.emit(exports.FrameManagerEmittedEvents.LifecycleEvent, frame);\n  }\n\n  _handleFrameTree(session, frameTree) {\n    if (frameTree.frame.parentId) {\n      this._onFrameAttached(session, frameTree.frame.id, frameTree.frame.parentId);\n    }\n\n    this._onFrameNavigated(frameTree.frame);\n\n    if (!frameTree.childFrames) return;\n\n    for (const child of frameTree.childFrames) {\n      this._handleFrameTree(session, child);\n    }\n  }\n\n  page() {\n    return this._page;\n  }\n\n  mainFrame() {\n    return this._mainFrame;\n  }\n\n  frames() {\n    return Array.from(this._frames.values());\n  }\n\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n\n  _onFrameAttached(session, frameId, parentFrameId) {\n    if (this._frames.has(frameId)) {\n      const frame = this._frames.get(frameId);\n\n      if (session && frame.isOOPFrame()) {\n        // If an OOP iframes becomes a normal iframe again\n        // it is first attached to the parent page before\n        // the target is removed.\n        frame._updateClient(session);\n      }\n\n      return;\n    }\n\n    (0, assert_js_1.assert)(parentFrameId);\n\n    const parentFrame = this._frames.get(parentFrameId);\n\n    const frame = new Frame(this, parentFrame, frameId, session);\n\n    this._frames.set(frame._id, frame);\n\n    this.emit(exports.FrameManagerEmittedEvents.FrameAttached, frame);\n  }\n\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    (0, assert_js_1.assert)(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame'); // Detach all child frames first.\n\n    if (frame) {\n      for (const child of frame.childFrames()) this._removeFramesRecursively(child);\n    } // Update or create main frame.\n\n\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, null, framePayload.id, this._client);\n      }\n\n      this._frames.set(framePayload.id, frame);\n\n      this._mainFrame = frame;\n    } // Update frame payload.\n\n\n    frame._navigated(framePayload);\n\n    this.emit(exports.FrameManagerEmittedEvents.FrameNavigated, frame);\n  }\n\n  async _ensureIsolatedWorld(session, name) {\n    const key = `${session.id()}:${name}`;\n    if (this._isolatedWorlds.has(key)) return;\n\n    this._isolatedWorlds.add(key);\n\n    await session.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: `//# sourceURL=${ExecutionContext_js_1.EVALUATION_SCRIPT_URL}`,\n      worldName: name\n    }); // Frames might be removed before we send this.\n\n    await Promise.all(this.frames().filter(frame => frame._client === session).map(frame => session.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      worldName: name,\n      grantUniveralAccess: true\n    }).catch(helper_js_1.debugError)));\n  }\n\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n\n    if (!frame) return;\n\n    frame._navigatedWithinDocument(url);\n\n    this.emit(exports.FrameManagerEmittedEvents.FrameNavigatedWithinDocument, frame);\n    this.emit(exports.FrameManagerEmittedEvents.FrameNavigated, frame);\n  }\n\n  _onFrameDetached(frameId, reason) {\n    const frame = this._frames.get(frameId);\n\n    if (reason === 'remove') {\n      // Only remove the frame if the reason for the detached event is\n      // an actual removement of the frame.\n      // For frames that become OOP iframes, the reason would be 'swap'.\n      if (frame) this._removeFramesRecursively(frame);\n    } else if (reason === 'swap') {\n      this.emit(exports.FrameManagerEmittedEvents.FrameSwapped, frame);\n    }\n  }\n\n  _onExecutionContextCreated(contextPayload, session) {\n    const auxData = contextPayload.auxData;\n    const frameId = auxData ? auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    let world = null;\n\n    if (frame) {\n      // Only care about execution contexts created for the current session.\n      if (frame._client !== session) return;\n\n      if (contextPayload.auxData && !!contextPayload.auxData['isDefault']) {\n        world = frame._mainWorld;\n      } else if (contextPayload.name === UTILITY_WORLD_NAME && !frame._secondaryWorld._hasContext()) {\n        // In case of multiple sessions to the same target, there's a race between\n        // connections so we might end up creating multiple isolated worlds.\n        // We can use either.\n        world = frame._secondaryWorld;\n      }\n    }\n\n    const context = new ExecutionContext_js_1.ExecutionContext((frame === null || frame === void 0 ? void 0 : frame._client) || this._client, contextPayload, world);\n    if (world) world._setContext(context);\n    const key = `${session.id()}:${contextPayload.id}`;\n\n    this._contextIdToContext.set(key, context);\n  }\n\n  _onExecutionContextDestroyed(executionContextId, session) {\n    const key = `${session.id()}:${executionContextId}`;\n\n    const context = this._contextIdToContext.get(key);\n\n    if (!context) return;\n\n    this._contextIdToContext.delete(key);\n\n    if (context._world) context._world._setContext(null);\n  }\n\n  _onExecutionContextsCleared(session) {\n    for (const [key, context] of this._contextIdToContext.entries()) {\n      // Make sure to only clear execution contexts that belong\n      // to the current session.\n      if (context._client !== session) continue;\n      if (context._world) context._world._setContext(null);\n\n      this._contextIdToContext.delete(key);\n    }\n  }\n\n  executionContextById(contextId) {\n    let session = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._client;\n    const key = `${session.id()}:${contextId}`;\n\n    const context = this._contextIdToContext.get(key);\n\n    (0, assert_js_1.assert)(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames()) this._removeFramesRecursively(child);\n\n    frame._detach();\n\n    this._frames.delete(frame._id);\n\n    this.emit(exports.FrameManagerEmittedEvents.FrameDetached, frame);\n  }\n\n}\n\nexports.FrameManager = FrameManager;\n/**\n * At every point of time, page exposes its current frame tree via the\n * {@link Page.mainFrame | page.mainFrame} and\n * {@link Frame.childFrames | frame.childFrames} methods.\n *\n * @remarks\n *\n * `Frame` object lifecycles are controlled by three events that are all\n * dispatched on the page object:\n *\n * - {@link PageEmittedEvents.FrameAttached}\n *\n * - {@link PageEmittedEvents.FrameNavigated}\n *\n * - {@link PageEmittedEvents.FrameDetached}\n *\n * @Example\n * An example of dumping frame tree:\n *\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com/chrome/browser/canary.html');\n *   dumpFrameTree(page.mainFrame(), '');\n *   await browser.close();\n *\n *   function dumpFrameTree(frame, indent) {\n *     console.log(indent + frame.url());\n *     for (const child of frame.childFrames()) {\n *     dumpFrameTree(child, indent + '  ');\n *     }\n *   }\n * })();\n * ```\n *\n * @Example\n * An example of getting text from an iframe element:\n *\n * ```js\n * const frame = page.frames().find(frame => frame.name() === 'myframe');\n * const text = await frame.$eval('.selector', element => element.textContent);\n * console.log(text);\n * ```\n *\n * @public\n */\n\nclass Frame {\n  /**\n   * @internal\n   */\n  constructor(frameManager, parentFrame, frameId, client) {\n    this._url = '';\n    this._detached = false;\n    /**\n     * @internal\n     */\n\n    this._loaderId = '';\n    /**\n     * @internal\n     */\n\n    this._lifecycleEvents = new Set();\n    this._frameManager = frameManager;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n    this._loaderId = '';\n    this._childFrames = new Set();\n    if (this._parentFrame) this._parentFrame._childFrames.add(this);\n\n    this._updateClient(client);\n  }\n  /**\n   * @internal\n   */\n\n\n  _updateClient(client) {\n    this._client = client;\n    this._mainWorld = new DOMWorld_js_1.DOMWorld(this._client, this._frameManager, this, this._frameManager._timeoutSettings);\n    this._secondaryWorld = new DOMWorld_js_1.DOMWorld(this._client, this._frameManager, this, this._frameManager._timeoutSettings);\n  }\n  /**\n   * @remarks\n   *\n   * @returns `true` if the frame is an OOP frame, or `false` otherwise.\n   */\n\n\n  isOOPFrame() {\n    return this._client !== this._frameManager._client;\n  }\n  /**\n   * @remarks\n   *\n   * `frame.goto` will throw an error if:\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   *\n   * - target URL is invalid.\n   *\n   * - the `timeout` is exceeded during navigation.\n   *\n   * - the remote server does not respond or is unreachable.\n   *\n   * - the main resource failed to load.\n   *\n   * `frame.goto` will not throw an error when any valid HTTP status code is\n   * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n   * Server Error\".  The status code for such responses can be retrieved by\n   * calling {@link HTTPResponse.status}.\n   *\n   * NOTE: `frame.goto` either throws an error or returns a main resource\n   * response. The only exceptions are navigation to `about:blank` or\n   * navigation to the same URL with a different hash, which would succeed and\n   * return `null`.\n   *\n   * NOTE: Headless mode doesn't support navigation to a PDF document. See\n   * the {@link https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n   * issue}.\n   *\n   * @param url - the URL to navigate the frame to. This should include the\n   * scheme, e.g. `https://`.\n   * @param options - navigation options. `waitUntil` is useful to define when\n   * the navigation should be considered successful - see the docs for\n   * {@link PuppeteerLifeCycleEvent} for more details.\n   *\n   * @returns A promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   */\n\n\n  async goto(url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._frameManager.navigateFrame(this, url, options);\n  }\n  /**\n   * @remarks\n   *\n   * This resolves when the frame navigates to a new URL. It is useful for when\n   * you run code which will indirectly cause the frame to navigate. Consider\n   * this example:\n   *\n   * ```js\n   * const [response] = await Promise.all([\n   *   // The navigation promise resolves after navigation has finished\n   *   frame.waitForNavigation(),\n   *   // Clicking the link will indirectly cause a navigation\n   *   frame.click('a.my-link'),\n   * ]);\n   * ```\n   *\n   * Usage of the {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API} to change the URL is considered a navigation.\n   *\n   * @param options - options to configure when the navigation is consided finished.\n   * @returns a promise that resolves when the frame navigates to a new URL.\n   */\n\n\n  async waitForNavigation() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return await this._frameManager.waitForFrameNavigation(this, options);\n  }\n  /**\n   * @internal\n   */\n\n\n  client() {\n    return this._client;\n  }\n  /**\n   * @returns a promise that resolves to the frame's default execution context.\n   */\n\n\n  executionContext() {\n    return this._mainWorld.executionContext();\n  }\n  /**\n   * @remarks\n   *\n   * The only difference between {@link Frame.evaluate} and\n   * `frame.evaluateHandle` is that `evaluateHandle` will return the value\n   * wrapped in an in-page object.\n   *\n   * This method behaves identically to {@link Page.evaluateHandle} except it's\n   * run within the context of the `frame`, rather than the entire page.\n   *\n   * @param pageFunction - a function that is run within the frame\n   * @param args - arguments to be passed to the pageFunction\n   */\n\n\n  async evaluateHandle(pageFunction) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this._mainWorld.evaluateHandle(pageFunction, ...args);\n  }\n  /**\n   * @remarks\n   *\n   * This method behaves identically to {@link Page.evaluate} except it's run\n   * within the context of the `frame`, rather than the entire page.\n   *\n   * @param pageFunction - a function that is run within the frame\n   * @param args - arguments to be passed to the pageFunction\n   */\n\n\n  async evaluate(pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return this._mainWorld.evaluate(pageFunction, ...args);\n  }\n  /**\n   * This method queries the frame for the given selector.\n   *\n   * @param selector - a selector to query for.\n   * @returns A promise which resolves to an `ElementHandle` pointing at the\n   * element, or `null` if it was not found.\n   */\n\n\n  async $(selector) {\n    return this._mainWorld.$(selector);\n  }\n  /**\n   * This method evaluates the given XPath expression and returns the results.\n   *\n   * @param expression - the XPath expression to evaluate.\n   */\n\n\n  async $x(expression) {\n    return this._mainWorld.$x(expression);\n  }\n  /**\n   * @remarks\n   *\n   * This method runs `document.querySelector` within\n   * the frame and passes it as the first argument to `pageFunction`.\n   *\n   * If `pageFunction` returns a Promise, then `frame.$eval` would wait for\n   * the promise to resolve and return its value.\n   *\n   * @example\n   *\n   * ```js\n   * const searchValue = await frame.$eval('#search', el => el.value);\n   * ```\n   *\n   * @param selector - the selector to query for\n   * @param pageFunction - the function to be evaluated in the frame's context\n   * @param args - additional arguments to pass to `pageFuncton`\n   */\n\n\n  async $eval(selector, pageFunction) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      args[_key3 - 2] = arguments[_key3];\n    }\n\n    return this._mainWorld.$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * @remarks\n   *\n   * This method runs `Array.from(document.querySelectorAll(selector))` within\n   * the frame and passes it as the first argument to `pageFunction`.\n   *\n   * If `pageFunction` returns a Promise, then `frame.$$eval` would wait for\n   * the promise to resolve and return its value.\n   *\n   * @example\n   *\n   * ```js\n   * const divsCounts = await frame.$$eval('div', divs => divs.length);\n   * ```\n   *\n   * @param selector - the selector to query for\n   * @param pageFunction - the function to be evaluated in the frame's context\n   * @param args - additional arguments to pass to `pageFuncton`\n   */\n\n\n  async $$eval(selector, pageFunction) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      args[_key4 - 2] = arguments[_key4];\n    }\n\n    return this._mainWorld.$$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * This runs `document.querySelectorAll` in the frame and returns the result.\n   *\n   * @param selector - a selector to search for\n   * @returns An array of element handles pointing to the found frame elements.\n   */\n\n\n  async $$(selector) {\n    return this._mainWorld.$$(selector);\n  }\n  /**\n   * @returns the full HTML contents of the frame, including the doctype.\n   */\n\n\n  async content() {\n    return this._secondaryWorld.content();\n  }\n  /**\n   * Set the content of the frame.\n   *\n   * @param html - HTML markup to assign to the page.\n   * @param options - options to configure how long before timing out and at\n   * what point to consider the content setting successful.\n   */\n\n\n  async setContent(html) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._secondaryWorld.setContent(html, options);\n  }\n  /**\n   * @remarks\n   *\n   * If the name is empty, it returns the `id` attribute instead.\n   *\n   * Note: This value is calculated once when the frame is created, and will not\n   * update if the attribute is changed later.\n   *\n   * @returns the frame's `name` attribute as specified in the tag.\n   */\n\n\n  name() {\n    return this._name || '';\n  }\n  /**\n   * @returns the frame's URL.\n   */\n\n\n  url() {\n    return this._url;\n  }\n  /**\n   * @returns the parent `Frame`, if any. Detached and main frames return `null`.\n   */\n\n\n  parentFrame() {\n    return this._parentFrame;\n  }\n  /**\n   * @returns an array of child frames.\n   */\n\n\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n  /**\n   * @returns `true` if the frame has been detached, or `false` otherwise.\n   */\n\n\n  isDetached() {\n    return this._detached;\n  }\n  /**\n   * Adds a `<script>` tag into the page with the desired url or content.\n   *\n   * @param options - configure the script to add to the page.\n   *\n   * @returns a promise that resolves to the added tag when the script's\n   * `onload` event fires or when the script content was injected into the\n   * frame.\n   */\n\n\n  async addScriptTag(options) {\n    return this._mainWorld.addScriptTag(options);\n  }\n  /**\n   * Adds a `<link rel=\"stylesheet\">` tag into the page with the desired url or\n   * a `<style type=\"text/css\">` tag with the content.\n   *\n   * @param options - configure the CSS to add to the page.\n   *\n   * @returns a promise that resolves to the added tag when the stylesheets's\n   * `onload` event fires or when the CSS content was injected into the\n   * frame.\n   */\n\n\n  async addStyleTag(options) {\n    return this._mainWorld.addStyleTag(options);\n  }\n  /**\n   *\n   * This method clicks the first element found that matches `selector`.\n   *\n   * @remarks\n   *\n   * This method scrolls the element into view if needed, and then uses\n   * {@link Page.mouse} to click in the center of the element. If there's no\n   * element matching `selector`, the method throws an error.\n   *\n   * Bear in mind that if `click()` triggers a navigation event and there's a\n   * separate `page.waitForNavigation()` promise to be resolved, you may end up\n   * with a race condition that yields unexpected results. The correct pattern\n   * for click and wait for navigation is the following:\n   *\n   * ```javascript\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(waitOptions),\n   *   frame.click(selector, clickOptions),\n   * ]);\n   * ```\n   * @param selector - the selector to search for to click. If there are\n   * multiple elements, the first will be clicked.\n   */\n\n\n  async click(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._secondaryWorld.click(selector, options);\n  }\n  /**\n   * This method fetches an element with `selector` and focuses it.\n   *\n   * @remarks\n   * If there's no element matching `selector`, the method throws an error.\n   *\n   * @param selector - the selector for the element to focus. If there are\n   * multiple elements, the first will be focused.\n   */\n\n\n  async focus(selector) {\n    return this._secondaryWorld.focus(selector);\n  }\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.mouse} to hover over the center of the\n   * element.\n   *\n   * @remarks\n   * If there's no element matching `selector`, the method throws an\n   *\n   * @param selector - the selector for the element to hover. If there are\n   * multiple elements, the first will be hovered.\n   */\n\n\n  async hover(selector) {\n    return this._secondaryWorld.hover(selector);\n  }\n  /**\n   * Triggers a `change` and `input` event once all the provided options have\n   * been selected.\n   *\n   * @remarks\n   *\n   * If there's no `<select>` element matching `selector`, the\n   * method throws an error.\n   *\n   * @example\n   * ```js\n   * frame.select('select#colors', 'blue'); // single selection\n   * frame.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param selector - a selector to query the frame for\n   * @param values - an array of values to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first\n   * one is taken into account.\n   * @returns the list of values that were successfully selected.\n   */\n\n\n  select(selector) {\n    for (var _len5 = arguments.length, values = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      values[_key5 - 1] = arguments[_key5];\n    }\n\n    return this._secondaryWorld.select(selector, ...values);\n  }\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.touchscreen} to tap in the center of the\n   * element.\n   *\n   * @remarks\n   *\n   * If there's no element matching `selector`, the method throws an error.\n   *\n   * @param selector - the selector to tap.\n   * @returns a promise that resolves when the element has been tapped.\n   */\n\n\n  async tap(selector) {\n    return this._secondaryWorld.tap(selector);\n  }\n  /**\n   * Sends a `keydown`, `keypress`/`input`, and `keyup` event for each character\n   * in the text.\n   *\n   * @remarks\n   * To press a special key, like `Control` or `ArrowDown`, use\n   * {@link Keyboard.press}.\n   *\n   * @example\n   * ```js\n   * await frame.type('#mytextarea', 'Hello'); // Types instantly\n   * await frame.type('#mytextarea', 'World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @param selector - the selector for the element to type into. If there are\n   * multiple the first will be used.\n   * @param text - text to type into the element\n   * @param options - takes one option, `delay`, which sets the time to wait\n   * between key presses in milliseconds. Defaults to `0`.\n   *\n   * @returns a promise that resolves when the typing is complete.\n   */\n\n\n  async type(selector, text, options) {\n    return this._mainWorld.type(selector, text, options);\n  }\n  /**\n   * @remarks\n   *\n   * This method behaves differently depending on the first parameter. If it's a\n   * `string`, it will be treated as a `selector` or `xpath` (if the string\n   * starts with `//`). This method then is a shortcut for\n   * {@link Frame.waitForSelector} or {@link Frame.waitForXPath}.\n   *\n   * If the first argument is a function this method is a shortcut for\n   * {@link Frame.waitForFunction}.\n   *\n   * If the first argument is a `number`, it's treated as a timeout in\n   * milliseconds and the method returns a promise which resolves after the\n   * timeout.\n   *\n   * @param selectorOrFunctionOrTimeout - a selector, predicate or timeout to\n   * wait for.\n   * @param options - optional waiting parameters.\n   * @param args - arguments to pass to `pageFunction`.\n   *\n   * @deprecated Don't use this method directly. Instead use the more explicit\n   * methods available: {@link Frame.waitForSelector},\n   * {@link Frame.waitForXPath}, {@link Frame.waitForFunction} or\n   * {@link Frame.waitForTimeout}.\n   */\n\n\n  waitFor(selectorOrFunctionOrTimeout) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    console.warn('waitFor is deprecated and will be removed in a future release. See https://github.com/puppeteer/puppeteer/issues/6214 for details and how to migrate your code.');\n\n    if (helper_js_1.helper.isString(selectorOrFunctionOrTimeout)) {\n      const string = selectorOrFunctionOrTimeout;\n      if (xPathPattern.test(string)) return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n\n    if (helper_js_1.helper.isNumber(selectorOrFunctionOrTimeout)) return new Promise(fulfill => setTimeout(fulfill, selectorOrFunctionOrTimeout));\n\n    for (var _len6 = arguments.length, args = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n      args[_key6 - 2] = arguments[_key6];\n    }\n\n    if (typeof selectorOrFunctionOrTimeout === 'function') return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + typeof selectorOrFunctionOrTimeout));\n  }\n  /**\n   * Causes your script to wait for the given number of milliseconds.\n   *\n   * @remarks\n   * It's generally recommended to not wait for a number of seconds, but instead\n   * use {@link Frame.waitForSelector}, {@link Frame.waitForXPath} or\n   * {@link Frame.waitForFunction} to wait for exactly the conditions you want.\n   *\n   * @example\n   *\n   * Wait for 1 second:\n   *\n   * ```\n   * await frame.waitForTimeout(1000);\n   * ```\n   *\n   * @param milliseconds - the number of milliseconds to wait.\n   */\n\n\n  waitForTimeout(milliseconds) {\n    return new Promise(resolve => {\n      setTimeout(resolve, milliseconds);\n    });\n  }\n  /**\n   * @remarks\n   *\n   *\n   * Wait for the `selector` to appear in page. If at the moment of calling the\n   * method the `selector` already exists, the method will return immediately.\n   * If the selector doesn't appear after the `timeout` milliseconds of waiting,\n   * the function will throw.\n   *\n   * This method works across navigations.\n   *\n   * @example\n   * ```js\n   * const puppeteer = require('puppeteer');\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page.mainFrame()\n   *   .waitForSelector('img')\n   *   .then(() => console.log('First URL with image: ' + currentURL));\n   *\n   *   for (currentURL of ['https://example.com', 'https://google.com', 'https://bbc.com']) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   * @param selector - the selector to wait for.\n   * @param options - options to define if the element should be visible and how\n   * long to wait before timing out.\n   * @returns a promise which resolves when an element matching the selector\n   * string is added to the DOM.\n   */\n\n\n  async waitForSelector(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const handle = await this._secondaryWorld.waitForSelector(selector, options);\n    if (!handle) return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n  /**\n   * @remarks\n   * Wait for the `xpath` to appear in page. If at the moment of calling the\n   * method the `xpath` already exists, the method will return immediately. If\n   * the xpath doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * For a code example, see the example for {@link Frame.waitForSelector}. That\n   * function behaves identically other than taking a CSS selector rather than\n   * an XPath.\n   *\n   * @param xpath - the XPath expression to wait for.\n   * @param options  - options to configure the visiblity of the element and how\n   * long to wait before timing out.\n   */\n\n\n  async waitForXPath(xpath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const handle = await this._secondaryWorld.waitForXPath(xpath, options);\n    if (!handle) return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n  /**\n   * @remarks\n   *\n   * @example\n   *\n   * The `waitForFunction` can be used to observe viewport size change:\n   * ```js\n   * const puppeteer = require('puppeteer');\n   *\n   * (async () => {\n   * .  const browser = await puppeteer.launch();\n   * .  const page = await browser.newPage();\n   * .  const watchDog = page.mainFrame().waitForFunction('window.innerWidth < 100');\n   * .  page.setViewport({width: 50, height: 50});\n   * .  await watchDog;\n   * .  await browser.close();\n   * })();\n   * ```\n   *\n   * To pass arguments from Node.js to the predicate of `page.waitForFunction` function:\n   *\n   * ```js\n   * const selector = '.foo';\n   * await frame.waitForFunction(\n   *   selector => !!document.querySelector(selector),\n   *   {}, // empty options object\n   *   selector\n   *);\n   * ```\n   *\n   * @param pageFunction - the function to evaluate in the frame context.\n   * @param options - options to configure the polling method and timeout.\n   * @param args - arguments to pass to the `pageFunction`.\n   * @returns the promise which resolve when the `pageFunction` returns a truthy value.\n   */\n\n\n  waitForFunction(pageFunction) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n      args[_key7 - 2] = arguments[_key7];\n    }\n\n    return this._mainWorld.waitForFunction(pageFunction, options, ...args);\n  }\n  /**\n   * @returns the frame's title.\n   */\n\n\n  async title() {\n    return this._secondaryWorld.title();\n  }\n  /**\n   * @internal\n   */\n\n\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    this._url = `${framePayload.url}${framePayload.urlFragment || ''}`;\n  }\n  /**\n   * @internal\n   */\n\n\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n  /**\n   * @internal\n   */\n\n\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n\n      this._lifecycleEvents.clear();\n    }\n\n    this._lifecycleEvents.add(name);\n  }\n  /**\n   * @internal\n   */\n\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n\n    this._lifecycleEvents.add('load');\n  }\n  /**\n   * @internal\n   */\n\n\n  _detach() {\n    this._detached = true;\n\n    this._mainWorld._detach();\n\n    this._secondaryWorld._detach();\n\n    if (this._parentFrame) this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n\n}\n\nexports.Frame = Frame;\n\nfunction assertNoLegacyNavigationOptions(options) {\n  (0, assert_js_1.assert)(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  (0, assert_js_1.assert)(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  (0, assert_js_1.assert)(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}","map":{"version":3,"mappings":"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","names":["UTILITY_WORLD_NAME","xPathPattern","exports","FrameAttached","Symbol","FrameNavigated","FrameDetached","FrameSwapped","LifecycleEvent","FrameNavigatedWithinDocument","ExecutionContextCreated","ExecutionContextDestroyed","FrameManager","EventEmitter_js_1","constructor","client","page","ignoreHTTPSErrors","timeoutSettings","Map","Set","_client","_page","_networkManager","NetworkManager_js_1","_timeoutSettings","setupEventListeners","session","on","event","_onFrameAttached","frameId","parentFrameId","_onFrameNavigated","frame","_onFrameNavigatedWithinDocument","url","_onFrameDetached","reason","_onFrameStoppedLoading","_onExecutionContextCreated","context","_onExecutionContextDestroyed","executionContextId","_onExecutionContextsCleared","_onLifecycleEvent","_onAttachedToTarget","_onDetachedFromTarget","initialize","result","Promise","all","send","frameTree","_handleFrameTree","enabled","then","_ensureIsolatedWorld","resolve","error","message","includes","networkManager","navigateFrame","options","assertNoLegacyNavigationOptions","referer","extraHTTPHeaders","waitUntil","timeout","navigationTimeout","watcher","LifecycleWatcher_js_1","ensureNewDocumentNavigation","race","navigate","_id","timeoutOrTerminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","dispose","navigationResponse","referrer","response","loaderId","errorText","Error","waitForFrameNavigation","targetInfo","type","_frames","get","targetId","Connection_js_1","fromSession","sessionId","_updateClient","isOOPFrame","_removeFramesRecursively","name","emit","_onLoadingStopped","parentId","id","childFrames","child","mainFrame","_mainFrame","frames","Array","from","values","has","parentFrame","Frame","set","framePayload","isMainFrame","delete","_navigated","key","_isolatedWorlds","add","source","ExecutionContext_js_1","worldName","filter","map","grantUniveralAccess","catch","helper_js_1","_navigatedWithinDocument","contextPayload","auxData","world","_mainWorld","_secondaryWorld","_hasContext","_setContext","_contextIdToContext","_world","entries","executionContextById","contextId","_detach","frameManager","_frameManager","_parentFrame","_url","_detached","_loaderId","_childFrames","DOMWorld_js_1","goto","waitForNavigation","executionContext","evaluateHandle","pageFunction","args","evaluate","$","selector","$x","expression","$eval","$$eval","$$","content","setContent","html","_name","isDetached","addScriptTag","addStyleTag","click","focus","hover","select","tap","text","waitFor","selectorOrFunctionOrTimeout","console","warn","isString","string","test","waitForXPath","waitForSelector","isNumber","fulfill","setTimeout","waitForFunction","reject","waitForTimeout","milliseconds","handle","mainExecutionContext","_adoptElementHandle","xpath","title","urlFragment","_lifecycleEvents","clear","undefined"],"sources":["../../../../src/common/FrameManager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}