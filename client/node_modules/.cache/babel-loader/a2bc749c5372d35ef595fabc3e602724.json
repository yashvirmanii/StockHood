{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebWorker = void 0;\n/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst ExecutionContext_js_1 = require(\"./ExecutionContext.js\");\n\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\n/**\n * The WebWorker class represents a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}.\n *\n * @remarks\n * The events `workercreated` and `workerdestroyed` are emitted on the page\n * object to signal the worker lifecycle.\n *\n * @example\n * ```js\n * page.on('workercreated', worker => console.log('Worker created: ' + worker.url()));\n * page.on('workerdestroyed', worker => console.log('Worker destroyed: ' + worker.url()));\n *\n * console.log('Current workers:');\n * for (const worker of page.workers()) {\n *   console.log('  ' + worker.url());\n * }\n * ```\n *\n * @public\n */\n\n\nclass WebWorker extends EventEmitter_js_1.EventEmitter {\n  /**\n   *\n   * @internal\n   */\n  constructor(client, url, consoleAPICalled, exceptionThrown) {\n    super();\n    this._client = client;\n    this._url = url;\n    this._executionContextPromise = new Promise(x => this._executionContextCallback = x);\n    let jsHandleFactory;\n\n    this._client.once('Runtime.executionContextCreated', async event => {\n      // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n      jsHandleFactory = remoteObject => new JSHandle_js_1.JSHandle(executionContext, client, remoteObject);\n\n      const executionContext = new ExecutionContext_js_1.ExecutionContext(client, event.context, null);\n\n      this._executionContextCallback(executionContext);\n    }); // This might fail if the target is closed before we receive all execution contexts.\n\n\n    this._client.send('Runtime.enable').catch(helper_js_1.debugError);\n\n    this._client.on('Runtime.consoleAPICalled', event => consoleAPICalled(event.type, event.args.map(jsHandleFactory), event.stackTrace));\n\n    this._client.on('Runtime.exceptionThrown', exception => exceptionThrown(exception.exceptionDetails));\n  }\n  /**\n   * @returns The URL of this web worker.\n   */\n\n\n  url() {\n    return this._url;\n  }\n  /**\n   * Returns the ExecutionContext the WebWorker runs in\n   * @returns The ExecutionContext the web worker runs in.\n   */\n\n\n  async executionContext() {\n    return this._executionContextPromise;\n  }\n  /**\n   * If the function passed to the `worker.evaluate` returns a Promise, then\n   * `worker.evaluate` would wait for the promise to resolve and return its\n   * value. If the function passed to the `worker.evaluate` returns a\n   * non-serializable value, then `worker.evaluate` resolves to `undefined`.\n   * DevTools Protocol also supports transferring some additional values that\n   * are not serializable by `JSON`: `-0`, `NaN`, `Infinity`, `-Infinity`, and\n   * bigint literals.\n   * Shortcut for `await worker.executionContext()).evaluate(pageFunction, ...args)`.\n   *\n   * @param pageFunction - Function to be evaluated in the worker context.\n   * @param args - Arguments to pass to `pageFunction`.\n   * @returns Promise which resolves to the return value of `pageFunction`.\n   */\n\n\n  async evaluate(pageFunction) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return (await this._executionContextPromise).evaluate(pageFunction, ...args);\n  }\n  /**\n   * The only difference between `worker.evaluate` and `worker.evaluateHandle`\n   * is that `worker.evaluateHandle` returns in-page object (JSHandle). If the\n   * function passed to the `worker.evaluateHandle` returns a `Promise`, then\n   * `worker.evaluateHandle` would wait for the promise to resolve and return\n   * its value. Shortcut for\n   * `await worker.executionContext()).evaluateHandle(pageFunction, ...args)`\n   *\n   * @param pageFunction - Function to be evaluated in the page context.\n   * @param args - Arguments to pass to `pageFunction`.\n   * @returns Promise which resolves to the return value of `pageFunction`.\n   */\n\n\n  async evaluateHandle(pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return (await this._executionContextPromise).evaluateHandle(pageFunction, ...args);\n  }\n\n}\n\nexports.WebWorker = WebWorker;","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;AAeA;;AACA;;AACA;;AACA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAaA,SAAb,SAA+BC,8BAA/B,CAA2C;AAMzC;;;;AAIAC,cACEC,MADF,EAEEC,GAFF,EAGEC,gBAHF,EAIEC,eAJF,EAI0C;AAExC;AACA,SAAKC,OAAL,GAAeJ,MAAf;AACA,SAAKK,IAAL,GAAYJ,GAAZ;AACA,SAAKK,wBAAL,GAAgC,IAAIC,OAAJ,CAC7BC,CAAD,IAAQ,KAAKC,yBAAL,GAAiCD,CADX,CAAhC;AAIA,QAAIE,eAAJ;;AACA,SAAKN,OAAL,CAAaO,IAAb,CAAkB,iCAAlB,EAAqD,MAAOC,KAAP,IAAgB;AACnE;AACAF,qBAAe,GAAIG,YAAD,IAChB,IAAIC,sBAAJ,CAAaC,gBAAb,EAA+Bf,MAA/B,EAAuCa,YAAvC,CADF;;AAEA,YAAME,gBAAgB,GAAG,IAAIC,sCAAJ,CACvBhB,MADuB,EAEvBY,KAAK,CAACK,OAFiB,EAGvB,IAHuB,CAAzB;;AAKA,WAAKR,yBAAL,CAA+BM,gBAA/B;AACD,KAVD,EAVwC,CAsBxC;;;AACA,SAAKX,OAAL,CAAac,IAAb,CAAkB,gBAAlB,EAAoCC,KAApC,CAA0CC,sBAA1C;;AACA,SAAKhB,OAAL,CAAaiB,EAAb,CAAgB,0BAAhB,EAA6CT,KAAD,IAC1CV,gBAAgB,CACdU,KAAK,CAACU,IADQ,EAEdV,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAed,eAAf,CAFc,EAGdE,KAAK,CAACa,UAHQ,CADlB;;AAOA,SAAKrB,OAAL,CAAaiB,EAAb,CAAgB,yBAAhB,EAA4CK,SAAD,IACzCvB,eAAe,CAACuB,SAAS,CAACC,gBAAX,CADjB;AAGD;AAED;;;;;AAGA1B,KAAG;AACD,WAAO,KAAKI,IAAZ;AACD;AAED;;;;;;AAIsB,QAAhBU,gBAAgB;AACpB,WAAO,KAAKT,wBAAZ;AACD;AAED;;;;;;;;;;;;;;;;AAcc,QAARsB,QAAQ,CACZC,YADY,EAEE;AAAA,sCAAXN,IAAW;AAAXA,UAAW;AAAA;;AAEd,WAAO,CAAC,MAAM,KAAKjB,wBAAZ,EAAsCsB,QAAtC,CACLC,YADK,EAEL,GAAGN,IAFE,CAAP;AAID;AAED;;;;;;;;;;;;;;AAYoB,QAAdO,cAAc,CAClBD,YADkB,EAEe;AAAA,uCAA9BN,IAA8B;AAA9BA,UAA8B;AAAA;;AAEjC,WAAO,CAAC,MAAM,KAAKjB,wBAAZ,EAAsCwB,cAAtC,CACLD,YADK,EAEL,GAAGN,IAFE,CAAP;AAID;;AA7GwC;;AAA3CQ","names":["WebWorker","EventEmitter_js_1","constructor","client","url","consoleAPICalled","exceptionThrown","_client","_url","_executionContextPromise","Promise","x","_executionContextCallback","jsHandleFactory","once","event","remoteObject","JSHandle_js_1","executionContext","ExecutionContext_js_1","context","send","catch","helper_js_1","on","type","args","map","stackTrace","exception","exceptionDetails","evaluate","pageFunction","evaluateHandle","exports"],"sources":["../../../../src/common/WebWorker.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}