{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getQueryHandlerAndSelector = exports.clearCustomQueryHandlers = exports.customQueryHandlerNames = exports.unregisterCustomQueryHandler = exports.registerCustomQueryHandler = void 0;\n\nconst AriaQueryHandler_js_1 = require(\"./AriaQueryHandler.js\");\n\nfunction makeQueryHandler(handler) {\n  const internalHandler = {};\n\n  if (handler.queryOne) {\n    internalHandler.queryOne = async (element, selector) => {\n      const jsHandle = await element.evaluateHandle(handler.queryOne, selector);\n      const elementHandle = jsHandle.asElement();\n      if (elementHandle) return elementHandle;\n      await jsHandle.dispose();\n      return null;\n    };\n\n    internalHandler.waitFor = (domWorld, selector, options) => domWorld.waitForSelectorInPage(handler.queryOne, selector, options);\n  }\n\n  if (handler.queryAll) {\n    internalHandler.queryAll = async (element, selector) => {\n      const jsHandle = await element.evaluateHandle(handler.queryAll, selector);\n      const properties = await jsHandle.getProperties();\n      await jsHandle.dispose();\n      const result = [];\n\n      for (const property of properties.values()) {\n        const elementHandle = property.asElement();\n        if (elementHandle) result.push(elementHandle);\n      }\n\n      return result;\n    };\n\n    internalHandler.queryAllArray = async (element, selector) => {\n      const resultHandle = await element.evaluateHandle(handler.queryAll, selector);\n      const arrayHandle = await resultHandle.evaluateHandle(res => Array.from(res));\n      return arrayHandle;\n    };\n  }\n\n  return internalHandler;\n}\n\nconst _defaultHandler = makeQueryHandler({\n  queryOne: (element, selector) => element.querySelector(selector),\n  queryAll: (element, selector) => element.querySelectorAll(selector)\n});\n\nconst pierceHandler = makeQueryHandler({\n  queryOne: (element, selector) => {\n    let found = null;\n\n    const search = root => {\n      const iter = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT);\n\n      do {\n        const currentNode = iter.currentNode;\n\n        if (currentNode.shadowRoot) {\n          search(currentNode.shadowRoot);\n        }\n\n        if (currentNode instanceof ShadowRoot) {\n          continue;\n        }\n\n        if (!found && currentNode.matches(selector)) {\n          found = currentNode;\n        }\n      } while (!found && iter.nextNode());\n    };\n\n    if (element instanceof Document) {\n      element = element.documentElement;\n    }\n\n    search(element);\n    return found;\n  },\n  queryAll: (element, selector) => {\n    const result = [];\n\n    const collect = root => {\n      const iter = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT);\n\n      do {\n        const currentNode = iter.currentNode;\n\n        if (currentNode.shadowRoot) {\n          collect(currentNode.shadowRoot);\n        }\n\n        if (currentNode instanceof ShadowRoot) {\n          continue;\n        }\n\n        if (currentNode.matches(selector)) {\n          result.push(currentNode);\n        }\n      } while (iter.nextNode());\n    };\n\n    if (element instanceof Document) {\n      element = element.documentElement;\n    }\n\n    collect(element);\n    return result;\n  }\n});\n\nconst _builtInHandlers = new Map([['aria', AriaQueryHandler_js_1.ariaHandler], ['pierce', pierceHandler]]);\n\nconst _queryHandlers = new Map(_builtInHandlers);\n/**\n * @internal\n */\n\n\nfunction registerCustomQueryHandler(name, handler) {\n  if (_queryHandlers.get(name)) throw new Error(`A custom query handler named \"${name}\" already exists`);\n  const isValidName = /^[a-zA-Z]+$/.test(name);\n  if (!isValidName) throw new Error(`Custom query handler names may only contain [a-zA-Z]`);\n  const internalHandler = makeQueryHandler(handler);\n\n  _queryHandlers.set(name, internalHandler);\n}\n\nexports.registerCustomQueryHandler = registerCustomQueryHandler;\n/**\n * @internal\n */\n\nfunction unregisterCustomQueryHandler(name) {\n  if (_queryHandlers.has(name) && !_builtInHandlers.has(name)) {\n    _queryHandlers.delete(name);\n  }\n}\n\nexports.unregisterCustomQueryHandler = unregisterCustomQueryHandler;\n/**\n * @internal\n */\n\nfunction customQueryHandlerNames() {\n  return [..._queryHandlers.keys()].filter(name => !_builtInHandlers.has(name));\n}\n\nexports.customQueryHandlerNames = customQueryHandlerNames;\n/**\n * @internal\n */\n\nfunction clearCustomQueryHandlers() {\n  customQueryHandlerNames().forEach(unregisterCustomQueryHandler);\n}\n\nexports.clearCustomQueryHandlers = clearCustomQueryHandlers;\n/**\n * @internal\n */\n\nfunction getQueryHandlerAndSelector(selector) {\n  const hasCustomQueryHandler = /^[a-zA-Z]+\\//.test(selector);\n  if (!hasCustomQueryHandler) return {\n    updatedSelector: selector,\n    queryHandler: _defaultHandler\n  };\n  const index = selector.indexOf('/');\n  const name = selector.slice(0, index);\n  const updatedSelector = selector.slice(index + 1);\n\n  const queryHandler = _queryHandlers.get(name);\n\n  if (!queryHandler) throw new Error(`Query set to use \"${name}\", but no query handler of that name was found`);\n  return {\n    updatedSelector,\n    queryHandler\n  };\n}\n\nexports.getQueryHandlerAndSelector = getQueryHandlerAndSelector;","map":{"version":3,"mappings":"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","names":["makeQueryHandler","handler","internalHandler","queryOne","element","selector","jsHandle","evaluateHandle","elementHandle","asElement","dispose","waitFor","domWorld","options","waitForSelectorInPage","queryAll","properties","getProperties","result","property","values","push","queryAllArray","resultHandle","arrayHandle","res","Array","from","_defaultHandler","querySelector","querySelectorAll","pierceHandler","found","search","root","iter","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","currentNode","shadowRoot","ShadowRoot","matches","nextNode","Document","documentElement","collect","_builtInHandlers","Map","AriaQueryHandler_js_1","_queryHandlers","registerCustomQueryHandler","name","get","Error","isValidName","test","set","exports","unregisterCustomQueryHandler","has","delete","customQueryHandlerNames","keys","filter","clearCustomQueryHandlers","forEach","getQueryHandlerAndSelector","hasCustomQueryHandler","updatedSelector","queryHandler","index","indexOf","slice"],"sources":["../../../../src/common/QueryHandler.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}