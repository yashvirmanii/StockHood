{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElementHandle = exports.JSHandle = exports.createJSHandle = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\n\nconst environment_js_1 = require(\"../environment.js\");\n/**\n * @internal\n */\n\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frame, frameManager.page(), frameManager);\n  }\n\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nexports.createJSHandle = createJSHandle;\n\nconst applyOffsetsToQuad = (quad, offsetX, offsetY) => quad.map(part => ({\n  x: part.x + offsetX,\n  y: part.y + offsetY\n}));\n/**\n * Represents an in-page JavaScript object. JSHandles can be created with the\n * {@link Page.evaluateHandle | page.evaluateHandle} method.\n *\n * @example\n * ```js\n * const windowHandle = await page.evaluateHandle(() => window);\n * ```\n *\n * JSHandle prevents the referenced JavaScript object from being garbage-collected\n * unless the handle is {@link JSHandle.dispose | disposed}. JSHandles are auto-\n * disposed when their origin frame gets navigated or the parent context gets destroyed.\n *\n * JSHandle instances can be used as arguments for {@link Page.$eval},\n * {@link Page.evaluate}, and {@link Page.evaluateHandle}.\n *\n * @public\n */\n\n\nclass JSHandle {\n  /**\n   * @internal\n   */\n  constructor(context, client, remoteObject) {\n    /**\n     * @internal\n     */\n    this._disposed = false;\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n  }\n  /** Returns the execution context the handle belongs to.\n   */\n\n\n  executionContext() {\n    return this._context;\n  }\n  /**\n   * This method passes this handle as the first argument to `pageFunction`.\n   * If `pageFunction` returns a Promise, then `handle.evaluate` would wait\n   * for the promise to resolve and return its value.\n   *\n   * @example\n   * ```js\n   * const tweetHandle = await page.$('.tweet .retweets');\n   * expect(await tweetHandle.evaluate(node => node.innerText)).toBe('10');\n   * ```\n   */\n\n\n  async evaluate(pageFunction) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return await this.executionContext().evaluate(pageFunction, this, ...args);\n  }\n  /**\n   * This method passes this handle as the first argument to `pageFunction`.\n   *\n   * @remarks\n   *\n   * The only difference between `jsHandle.evaluate` and\n   * `jsHandle.evaluateHandle` is that `jsHandle.evaluateHandle`\n   * returns an in-page object (JSHandle).\n   *\n   * If the function passed to `jsHandle.evaluateHandle` returns a Promise,\n   * then `evaluateHandle.evaluateHandle` waits for the promise to resolve and\n   * returns its value.\n   *\n   * See {@link Page.evaluateHandle} for more details.\n   */\n\n\n  async evaluateHandle(pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return await this.executionContext().evaluateHandle(pageFunction, this, ...args);\n  }\n  /** Fetches a single property from the referenced object.\n   */\n\n\n  async getProperty(propertyName) {\n    const objectHandle = await this.evaluateHandle((object, propertyName) => {\n      const result = {\n        __proto__: null\n      };\n      result[propertyName] = object[propertyName];\n      return result;\n    }, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName);\n    (0, assert_js_1.assert)(result instanceof JSHandle);\n    await objectHandle.dispose();\n    return result;\n  }\n  /**\n   * The method returns a map with property names as keys and JSHandle\n   * instances for the property values.\n   *\n   * @example\n   * ```js\n   * const listHandle = await page.evaluateHandle(() => document.body.children);\n   * const properties = await listHandle.getProperties();\n   * const children = [];\n   * for (const property of properties.values()) {\n   *   const element = property.asElement();\n   *   if (element)\n   *     children.push(element);\n   * }\n   * children; // holds elementHandles to all children of document.body\n   * ```\n   */\n\n\n  async getProperties() {\n    const response = await this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n\n    for (const property of response.result) {\n      if (!property.enumerable) continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n\n    return result;\n  }\n  /**\n   * @returns Returns a JSON representation of the object.If the object has a\n   * `toJSON` function, it will not be called.\n   * @remarks\n   *\n   * The JSON is generated by running {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify | JSON.stringify}\n   * on the object in page and consequent {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse | JSON.parse} in puppeteer.\n   * **NOTE** The method throws if the referenced object is not stringifiable.\n   */\n\n\n  async jsonValue() {\n    if (this._remoteObject.objectId) {\n      const response = await this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true\n      });\n      return helper_js_1.helper.valueFromRemoteObject(response.result);\n    }\n\n    return helper_js_1.helper.valueFromRemoteObject(this._remoteObject);\n  }\n  /**\n   * @returns Either `null` or the object handle itself, if the object\n   * handle is an instance of {@link ElementHandle}.\n   */\n\n\n  asElement() {\n    /*  This always returns null, but subclasses can override this and return an\n        ElementHandle.\n    */\n    return null;\n  }\n  /**\n   * Stops referencing the element handle, and resolves when the object handle is\n   * successfully disposed of.\n   */\n\n\n  async dispose() {\n    if (this._disposed) return;\n    this._disposed = true;\n    await helper_js_1.helper.releaseObject(this._client, this._remoteObject);\n  }\n  /**\n   * Returns a string representation of the JSHandle.\n   *\n   * @remarks Useful during debugging.\n   */\n\n\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type = this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n\n    return 'JSHandle:' + helper_js_1.helper.valueFromRemoteObject(this._remoteObject);\n  }\n\n}\n\nexports.JSHandle = JSHandle;\n/**\n * ElementHandle represents an in-page DOM element.\n *\n * @remarks\n *\n * ElementHandles can be created with the {@link Page.$} method.\n *\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *  const browser = await puppeteer.launch();\n *  const page = await browser.newPage();\n *  await page.goto('https://example.com');\n *  const hrefElement = await page.$('a');\n *  await hrefElement.click();\n *  // ...\n * })();\n * ```\n *\n * ElementHandle prevents the DOM element from being garbage-collected unless the\n * handle is {@link JSHandle.dispose | disposed}. ElementHandles are auto-disposed\n * when their origin frame gets navigated.\n *\n * ElementHandle instances can be used as arguments in {@link Page.$eval} and\n * {@link Page.evaluate} methods.\n *\n * If you're using TypeScript, ElementHandle takes a generic argument that\n * denotes the type of element the handle is holding within. For example, if you\n * have a handle to a `<select>` element, you can type it as\n * `ElementHandle<HTMLSelectElement>` and you get some nicer type checks.\n *\n * @public\n */\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @internal\n   */\n  constructor(context, client, remoteObject, frame, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._frame = frame;\n    this._page = page;\n    this._frameManager = frameManager;\n  }\n  /**\n   * Wait for the `selector` to appear within the element. If at the moment of calling the\n   * method the `selector` already exists, the method will return immediately. If\n   * the `selector` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * This method does not work across navigations or if the element is detached from DOM.\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by selector string\n   * is added to DOM. Resolves to `null` if waiting for hidden: `true` and\n   * selector is not found in DOM.\n   * @remarks\n   * The optional parameters in `options` are:\n   *\n   * - `visible`: wait for the selected element to be present in DOM and to be\n   * visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   * properties. Defaults to `false`.\n   *\n   * - `hidden`: wait for the selected element to not be found in the DOM or to be hidden,\n   * i.e. have `display: none` or `visibility: hidden` CSS properties. Defaults to\n   * `false`.\n   *\n   * - `timeout`: maximum time to wait in milliseconds. Defaults to `30000`\n   * (30 seconds). Pass `0` to disable timeout. The default value can be changed\n   * by using the {@link Page.setDefaultTimeout} method.\n   */\n\n\n  async waitForSelector(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    const frame = this._context.frame();\n\n    const secondaryContext = await frame._secondaryWorld.executionContext();\n    const adoptedRoot = await secondaryContext._adoptElementHandle(this);\n    const handle = await frame._secondaryWorld.waitForSelector(selector, { ...options,\n      root: adoptedRoot\n    });\n    await adoptedRoot.dispose();\n    if (!handle) return null;\n    const mainExecutionContext = await frame._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n\n  asElement() {\n    return this;\n  }\n  /**\n   * Resolves to the content frame for element handles referencing\n   * iframe nodes, or null otherwise\n   */\n\n\n  async contentFrame() {\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string') return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  async _scrollIntoViewIfNeeded() {\n    const error = await this.evaluate(async (element, pageJavascriptEnabled) => {\n      if (!element.isConnected) return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE) return 'Node is not of type HTMLElement'; // force-scroll if page's javascript is disabled.\n\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          // @ts-expect-error Chrome still supports behavior: instant but\n          // it's not in the spec so TS shouts We don't want to make this\n          // breaking change in Puppeteer yet so we'll ignore the line.\n          behavior: 'instant'\n        });\n        return false;\n      }\n\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n\n      if (visibleRatio !== 1.0) {\n        element.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          // @ts-expect-error Chrome still supports behavior: instant but\n          // it's not in the spec so TS shouts We don't want to make this\n          // breaking change in Puppeteer yet so we'll ignore the line.\n          behavior: 'instant'\n        });\n      }\n\n      return false;\n    }, this._page.isJavaScriptEnabled());\n    if (error) throw new Error(error);\n  }\n\n  async _getOOPIFOffsets(frame) {\n    let offsetX = 0;\n    let offsetY = 0;\n\n    while (frame.parentFrame()) {\n      const parent = frame.parentFrame();\n\n      if (!frame.isOOPFrame()) {\n        frame = parent;\n        continue;\n      }\n\n      const {\n        backendNodeId\n      } = await parent._client.send('DOM.getFrameOwner', {\n        frameId: frame._id\n      });\n      const result = await parent._client.send('DOM.getBoxModel', {\n        backendNodeId: backendNodeId\n      });\n\n      if (!result) {\n        break;\n      }\n\n      const contentBoxQuad = result.model.content;\n\n      const topLeftCorner = this._fromProtocolQuad(contentBoxQuad)[0];\n\n      offsetX += topLeftCorner.x;\n      offsetY += topLeftCorner.y;\n      frame = parent;\n    }\n\n    return {\n      offsetX,\n      offsetY\n    };\n  }\n  /**\n   * Returns the middle point within an element unless a specific offset is provided.\n   */\n\n\n  async clickablePoint(offset) {\n    const [result, layoutMetrics] = await Promise.all([this._client.send('DOM.getContentQuads', {\n      objectId: this._remoteObject.objectId\n    }).catch(helper_js_1.debugError), this._page.client().send('Page.getLayoutMetrics')]);\n    if (!result || !result.quads.length) throw new Error('Node is either not clickable or not an HTMLElement'); // Filter out quads that have too small area to click into.\n    // Fallback to `layoutViewport` in case of using Firefox.\n\n    const {\n      clientWidth,\n      clientHeight\n    } = layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;\n    const {\n      offsetX,\n      offsetY\n    } = await this._getOOPIFOffsets(this._frame);\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).map(quad => applyOffsetsToQuad(quad, offsetX, offsetY)).map(quad => this._intersectQuadWithViewport(quad, clientWidth, clientHeight)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length) throw new Error('Node is either not clickable or not an HTMLElement');\n    const quad = quads[0];\n\n    if (offset) {\n      // Return the point of the first quad identified by offset.\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (const point of quad) {\n        if (point.x < minX) {\n          minX = point.x;\n        }\n\n        if (point.y < minY) {\n          minY = point.y;\n        }\n      }\n\n      if (minX !== Number.MAX_SAFE_INTEGER && minY !== Number.MAX_SAFE_INTEGER) {\n        return {\n          x: minX + offset.x,\n          y: minY + offset.y\n        };\n      }\n    } // Return the middle point of the first quad.\n\n\n    let x = 0;\n    let y = 0;\n\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n\n  _getBoxModel() {\n    const params = {\n      objectId: this._remoteObject.objectId\n    };\n    return this._client.send('DOM.getBoxModel', params).catch(error => (0, helper_js_1.debugError)(error));\n  }\n\n  _fromProtocolQuad(quad) {\n    return [{\n      x: quad[0],\n      y: quad[1]\n    }, {\n      x: quad[2],\n      y: quad[3]\n    }, {\n      x: quad[4],\n      y: quad[5]\n    }, {\n      x: quad[6],\n      y: quad[7]\n    }];\n  }\n\n  _intersectQuadWithViewport(quad, width, height) {\n    return quad.map(point => ({\n      x: Math.min(Math.max(point.x, 0), width),\n      y: Math.min(Math.max(point.y, 0), height)\n    }));\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n\n\n  async hover() {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await this._page.mouse.move(x, y);\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n\n\n  async click() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this.clickablePoint(options.offset);\n    await this._page.mouse.click(x, y, options);\n  }\n  /**\n   * This method creates and captures a dragevent from the element.\n   */\n\n\n  async drag(target) {\n    (0, assert_js_1.assert)(this._page.isDragInterceptionEnabled(), 'Drag Interception is not enabled!');\n    await this._scrollIntoViewIfNeeded();\n    const start = await this.clickablePoint();\n    return await this._page.mouse.drag(start, target);\n  }\n  /**\n   * This method creates a `dragenter` event on the element.\n   */\n\n\n  async dragEnter() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      items: [],\n      dragOperationsMask: 1\n    };\n    await this._scrollIntoViewIfNeeded();\n    const target = await this.clickablePoint();\n    await this._page.mouse.dragEnter(target, data);\n  }\n  /**\n   * This method creates a `dragover` event on the element.\n   */\n\n\n  async dragOver() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      items: [],\n      dragOperationsMask: 1\n    };\n    await this._scrollIntoViewIfNeeded();\n    const target = await this.clickablePoint();\n    await this._page.mouse.dragOver(target, data);\n  }\n  /**\n   * This method triggers a drop on the element.\n   */\n\n\n  async drop() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      items: [],\n      dragOperationsMask: 1\n    };\n    await this._scrollIntoViewIfNeeded();\n    const destination = await this.clickablePoint();\n    await this._page.mouse.drop(destination, data);\n  }\n  /**\n   * This method triggers a dragenter, dragover, and drop on the element.\n   */\n\n\n  async dragAndDrop(target, options) {\n    await this._scrollIntoViewIfNeeded();\n    const startPoint = await this.clickablePoint();\n    const targetPoint = await target.clickablePoint();\n    await this._page.mouse.dragAndDrop(startPoint, targetPoint, options);\n  }\n  /**\n   * Triggers a `change` and `input` event once all the provided options have been\n   * selected. If there's no `<select>` element matching `selector`, the method\n   * throws an error.\n   *\n   * @example\n   * ```js\n   * handle.select('blue'); // single selection\n   * handle.select('red', 'green', 'blue'); // multiple selections\n   * ```\n   * @param values - Values of options to select. If the `<select>` has the\n   *    `multiple` attribute, all values are considered, otherwise only the first\n   *    one is taken into account.\n   */\n\n\n  async select() {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    for (const value of values) (0, assert_js_1.assert)(helper_js_1.helper.isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + typeof value + '\"');\n\n    return this.evaluate((element, values) => {\n      if (!(element instanceof HTMLSelectElement)) throw new Error('Element is not a <select> element.');\n      const options = Array.from(element.options);\n      element.value = undefined;\n\n      for (const option of options) {\n        option.selected = values.includes(option.value);\n        if (option.selected && !element.multiple) break;\n      }\n\n      element.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n      element.dispatchEvent(new Event('change', {\n        bubbles: true\n      }));\n      return options.filter(option => option.selected).map(option => option.value);\n    }, values);\n  }\n  /**\n   * This method expects `elementHandle` to point to an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input | input element}.\n   * @param filePaths - Sets the value of the file input to these paths.\n   *    If some of the  `filePaths` are relative paths, then they are resolved\n   *    relative to the {@link https://nodejs.org/api/process.html#process_process_cwd | current working directory}\n   */\n\n\n  async uploadFile() {\n    const isMultiple = await this.evaluate(element => {\n      if (!(element instanceof HTMLInputElement)) {\n        throw new Error('uploadFile can only be called on an input element.');\n      }\n\n      return element.multiple;\n    });\n\n    for (var _len4 = arguments.length, filePaths = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      filePaths[_key4] = arguments[_key4];\n    }\n\n    (0, assert_js_1.assert)(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');\n\n    if (!environment_js_1.isNode) {\n      throw new Error(`JSHandle#uploadFile can only be used in Node environments.`);\n    }\n    /*\n     This import is only needed for `uploadFile`, so keep it scoped here to\n     avoid paying the cost unnecessarily.\n    */\n\n\n    const path = await Promise.resolve().then(() => __importStar(require('path')));\n    const fs = await helper_js_1.helper.importFSModule(); // Locate all files and confirm that they exist.\n\n    const files = await Promise.all(filePaths.map(async filePath => {\n      const resolvedPath = path.resolve(filePath);\n\n      try {\n        await fs.promises.access(resolvedPath, fs.constants.R_OK);\n      } catch (error) {\n        if (error.code === 'ENOENT') throw new Error(`${filePath} does not exist or is not readable`);\n      }\n\n      return resolvedPath;\n    }));\n    const {\n      objectId\n    } = this._remoteObject;\n    const {\n      node\n    } = await this._client.send('DOM.describeNode', {\n      objectId\n    });\n    const {\n      backendNodeId\n    } = node;\n    /*  The zero-length array is a special case, it seems that\n        DOM.setFileInputFiles does not actually update the files in that case,\n        so the solution is to eval the element value to a new FileList directly.\n    */\n\n    if (files.length === 0) {\n      await this.evaluate(element => {\n        element.files = new DataTransfer().files; // Dispatch events for this case because it should behave akin to a user action.\n\n        element.dispatchEvent(new Event('input', {\n          bubbles: true\n        }));\n        element.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      });\n    } else {\n      await this._client.send('DOM.setFileInputFiles', {\n        objectId,\n        files,\n        backendNodeId\n      });\n    }\n  }\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Touchscreen.tap} to tap in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n\n\n  async tap() {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await this._page.touchscreen.tap(x, y);\n  }\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus | focus} on the element.\n   */\n\n\n  async focus() {\n    await this.evaluate(element => element.focus());\n  }\n  /**\n   * Focuses the element, and then sends a `keydown`, `keypress`/`input`, and\n   * `keyup` event for each character in the text.\n   *\n   * To press a special key, like `Control` or `ArrowDown`,\n   * use {@link ElementHandle.press}.\n   *\n   * @example\n   * ```js\n   * await elementHandle.type('Hello'); // Types instantly\n   * await elementHandle.type('World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @example\n   * An example of typing into a text field and then submitting the form:\n   *\n   * ```js\n   * const elementHandle = await page.$('input');\n   * await elementHandle.type('some text');\n   * await elementHandle.press('Enter');\n   * ```\n   */\n\n\n  async type(text, options) {\n    await this.focus();\n    await this._page.keyboard.type(text, options);\n  }\n  /**\n   * Focuses the element, and then uses {@link Keyboard.down} and {@link Keyboard.up}.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also be generated.\n   * The `text` option can be specified to force an input event to be generated.\n   *\n   * **NOTE** Modifier keys DO affect `elementHandle.press`. Holding down `Shift`\n   * will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   *    See {@link KeyInput} for a list of all key names.\n   */\n\n\n  async press(key, options) {\n    await this.focus();\n    await this._page.keyboard.press(key, options);\n  }\n  /**\n   * This method returns the bounding box of the element (relative to the main frame),\n   * or `null` if the element is not visible.\n   */\n\n\n  async boundingBox() {\n    const result = await this._getBoxModel();\n    if (!result) return null;\n    const {\n      offsetX,\n      offsetY\n    } = await this._getOOPIFOffsets(this._frame);\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n    return {\n      x: x + offsetX,\n      y: y + offsetY,\n      width,\n      height\n    };\n  }\n  /**\n   * This method returns boxes of the element, or `null` if the element is not visible.\n   *\n   * @remarks\n   *\n   * Boxes are represented as an array of points;\n   * Each Point is an object `{x, y}`. Box points are sorted clock-wise.\n   */\n\n\n  async boxModel() {\n    const result = await this._getBoxModel();\n    if (!result) return null;\n    const {\n      offsetX,\n      offsetY\n    } = await this._getOOPIFOffsets(this._frame);\n    const {\n      content,\n      padding,\n      border,\n      margin,\n      width,\n      height\n    } = result.model;\n    return {\n      content: applyOffsetsToQuad(this._fromProtocolQuad(content), offsetX, offsetY),\n      padding: applyOffsetsToQuad(this._fromProtocolQuad(padding), offsetX, offsetY),\n      border: applyOffsetsToQuad(this._fromProtocolQuad(border), offsetX, offsetY),\n      margin: applyOffsetsToQuad(this._fromProtocolQuad(margin), offsetX, offsetY),\n      width,\n      height\n    };\n  }\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Page.screenshot} to take a screenshot of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n\n\n  async screenshot() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let needsViewportReset = false;\n    let boundingBox = await this.boundingBox();\n    (0, assert_js_1.assert)(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height))\n      };\n      await this._page.setViewport(Object.assign({}, viewport, newViewport));\n      needsViewportReset = true;\n    }\n\n    await this._scrollIntoViewIfNeeded();\n    boundingBox = await this.boundingBox();\n    (0, assert_js_1.assert)(boundingBox, 'Node is either not visible or not an HTMLElement');\n    (0, assert_js_1.assert)(boundingBox.width !== 0, 'Node has 0 width.');\n    (0, assert_js_1.assert)(boundingBox.height !== 0, 'Node has 0 height.');\n    const layoutMetrics = await this._client.send('Page.getLayoutMetrics'); // Fallback to `layoutViewport` in case of using Firefox.\n\n    const {\n      pageX,\n      pageY\n    } = layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n    const imageData = await this._page.screenshot(Object.assign({}, {\n      clip\n    }, options));\n    if (needsViewportReset) await this._page.setViewport(viewport);\n    return imageData;\n  }\n  /**\n   * Runs `element.querySelector` within the page. If no element matches the selector,\n   * the return value resolves to `null`.\n   */\n\n\n  async $(selector) {\n    const {\n      updatedSelector,\n      queryHandler\n    } = (0, QueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    return queryHandler.queryOne(this, updatedSelector);\n  }\n  /**\n   * Runs `element.querySelectorAll` within the page. If no elements match the selector,\n   * the return value resolves to `[]`.\n   */\n\n\n  async $$(selector) {\n    const {\n      updatedSelector,\n      queryHandler\n    } = (0, QueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    return queryHandler.queryAll(this, updatedSelector);\n  }\n  /**\n   * This method runs `document.querySelector` within the element and passes it as\n   * the first argument to `pageFunction`. If there's no element matching `selector`,\n   * the method throws an error.\n   *\n   * If `pageFunction` returns a Promise, then `frame.$eval` would wait for the promise\n   * to resolve and return its value.\n   *\n   * @example\n   * ```js\n   * const tweetHandle = await page.$('.tweet');\n   * expect(await tweetHandle.$eval('.like', node => node.innerText)).toBe('100');\n   * expect(await tweetHandle.$eval('.retweets', node => node.innerText)).toBe('10');\n   * ```\n   */\n\n\n  async $eval(selector, pageFunction) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle) throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n\n    for (var _len5 = arguments.length, args = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n      args[_key5 - 2] = arguments[_key5];\n    }\n\n    const result = await elementHandle.evaluate(pageFunction, ...args);\n    await elementHandle.dispose();\n    /**\n     * This `as` is a little unfortunate but helps TS understand the behavior of\n     * `elementHandle.evaluate`. If evaluate returns an element it will return an\n     * ElementHandle instance, rather than the plain object. All the\n     * WrapElementHandle type does is wrap ReturnType into\n     * ElementHandle<ReturnType> if it is an ElementHandle, or leave it alone as\n     * ReturnType if it isn't.\n     */\n\n    return result;\n  }\n  /**\n   * This method runs `document.querySelectorAll` within the element and passes it as\n   * the first argument to `pageFunction`. If there's no element matching `selector`,\n   * the method throws an error.\n   *\n   * If `pageFunction` returns a Promise, then `frame.$$eval` would wait for the\n   * promise to resolve and return its value.\n   *\n   * @example\n   * ```html\n   * <div class=\"feed\">\n   *   <div class=\"tweet\">Hello!</div>\n   *   <div class=\"tweet\">Hi!</div>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```js\n   * const feedHandle = await page.$('.feed');\n   * expect(await feedHandle.$$eval('.tweet', nodes => nodes.map(n => n.innerText)))\n   *  .toEqual(['Hello!', 'Hi!']);\n   * ```\n   */\n\n\n  async $$eval(selector, pageFunction) {\n    const {\n      updatedSelector,\n      queryHandler\n    } = (0, QueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    const arrayHandle = await queryHandler.queryAllArray(this, updatedSelector);\n\n    for (var _len6 = arguments.length, args = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n      args[_key6 - 2] = arguments[_key6];\n    }\n\n    const result = await arrayHandle.evaluate(pageFunction, ...args);\n    await arrayHandle.dispose();\n    /* This `as` exists for the same reason as the `as` in $eval above.\n     * See the comment there for a full explanation.\n     */\n\n    return result;\n  }\n  /**\n   * The method evaluates the XPath expression relative to the elementHandle.\n   * If there are no such elements, the method will resolve to an empty array.\n   * @param expression - Expression to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate | evaluate}\n   */\n\n\n  async $x(expression) {\n    const arrayHandle = await this.evaluateHandle((element, expression) => {\n      const document = element.ownerDocument || element;\n      const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n      const array = [];\n      let item;\n\n      while (item = iterator.iterateNext()) array.push(item);\n\n      return array;\n    }, expression);\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle) result.push(elementHandle);\n    }\n\n    return result;\n  }\n  /**\n   * Resolves to true if the element is visible in the current viewport.\n   */\n\n\n  async isIntersectingViewport(options) {\n    const {\n      threshold = 0\n    } = options || {};\n    return await this.evaluate(async (element, threshold) => {\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      return threshold === 1 ? visibleRatio === 1 : visibleRatio > threshold;\n    }, threshold);\n  }\n\n}\n\nexports.ElementHandle = ElementHandle;\n\nfunction computeQuadArea(quad) {\n  /* Compute sum of all directed areas of adjacent triangles\n    https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  */\n  let area = 0;\n\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n\n  return Math.abs(area);\n}","map":{"version":3,"mappings":"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","names":["createJSHandle","context","remoteObject","frame","subtype","frameManager","_frameManager","ElementHandle","_client","page","JSHandle","exports","applyOffsetsToQuad","quad","offsetX","offsetY","map","part","x","y","constructor","client","_context","_remoteObject","executionContext","evaluate","pageFunction","args","evaluateHandle","getProperty","propertyName","objectHandle","object","result","__proto__","properties","getProperties","get","dispose","response","send","objectId","ownProperties","Map","property","enumerable","set","name","value","jsonValue","functionDeclaration","returnByValue","awaitPromise","helper_js_1","valueFromRemoteObject","asElement","_disposed","releaseObject","toString","type","_frame","_page","waitForSelector","selector","options","secondaryContext","_secondaryWorld","adoptedRoot","_adoptElementHandle","handle","root","mainExecutionContext","_mainWorld","contentFrame","nodeInfo","node","frameId","_scrollIntoViewIfNeeded","error","element","pageJavascriptEnabled","isConnected","nodeType","Node","ELEMENT_NODE","scrollIntoView","block","inline","behavior","visibleRatio","Promise","resolve","observer","IntersectionObserver","entries","intersectionRatio","disconnect","observe","isJavaScriptEnabled","Error","_getOOPIFOffsets","parentFrame","parent","isOOPFrame","backendNodeId","_id","contentBoxQuad","model","content","topLeftCorner","_fromProtocolQuad","clickablePoint","offset","layoutMetrics","all","catch","quads","length","clientWidth","clientHeight","cssLayoutViewport","layoutViewport","_intersectQuadWithViewport","filter","computeQuadArea","minX","Number","MAX_SAFE_INTEGER","minY","point","_getBoxModel","params","width","height","Math","min","max","hover","mouse","move","click","drag","target","isDragInterceptionEnabled","start","dragEnter","data","items","dragOperationsMask","dragOver","drop","destination","dragAndDrop","startPoint","targetPoint","select","values","isString","HTMLSelectElement","Array","from","undefined","option","selected","includes","multiple","dispatchEvent","Event","bubbles","uploadFile","isMultiple","HTMLInputElement","filePaths","environment_js_1","path","fs","importFSModule","files","filePath","resolvedPath","promises","access","constants","R_OK","code","DataTransfer","tap","touchscreen","focus","text","keyboard","press","key","boundingBox","border","boxModel","padding","margin","screenshot","needsViewportReset","viewport","newViewport","ceil","setViewport","Object","assign","pageX","pageY","cssVisualViewport","clip","imageData","$","updatedSelector","queryHandler","queryOne","$$","queryAll","$eval","elementHandle","$$eval","arrayHandle","queryAllArray","$x","expression","document","ownerDocument","iterator","XPathResult","ORDERED_NODE_ITERATOR_TYPE","array","item","iterateNext","push","isIntersectingViewport","threshold","area","i","p1","p2","abs"],"sources":["../../../../src/common/JSHandle.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}